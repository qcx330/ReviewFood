{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quynh\\\\Desktop\\\\React\\\\test\\\\src\\\\component\\\\Dish.js\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dish = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !data ? \"Not found\" : data.map(item => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"dish-card\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: item.strMealThumb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: item.strMeal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: item.strArea\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            className: \"list-group-flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"comment\",\n              children: \"Comment 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"comment\",\n              children: \"Comment 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: \"comment\",\n              children: \"Comment 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              className: \"card-button\",\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this)]\n        }, item.idMeal, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false);\n};\n_c = Dish;\nexport default Dish;\nvar _c;\n$RefreshReg$(_c, \"Dish\");","map":{"version":3,"names":["Card","ListGroup","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Dish","data","children","map","item","className","Img","variant","src","strMealThumb","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","strMeal","Text","strArea","Item","idMeal","_c","$RefreshReg$"],"sources":["C:/Users/quynh/Desktop/React/test/src/component/Dish.js"],"sourcesContent":["import Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Dish = ({ data }) => {\r\n  return (\r\n    <>\r\n      {!data\r\n        ? \"Not found\"\r\n        : data.map((item) => {\r\n            return (\r\n              <>\r\n                <Card key = {item.idMeal} className=\"dish-card\">\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src={item.strMealThumb}\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>{item.strMeal}</Card.Title>\r\n                    <Card.Text>{item.strArea}</Card.Text>\r\n                  </Card.Body>\r\n                  <ListGroup className=\"list-group-flush\">\r\n                    <ListGroup.Item className=\"comment\">Comment 1</ListGroup.Item>\r\n                    <ListGroup.Item className=\"comment\">Comment 2</ListGroup.Item>\r\n                    <ListGroup.Item className=\"comment\">Comment 3</ListGroup.Item>\r\n                  </ListGroup>\r\n                  <Card.Body>\r\n                    <Button variant=\"success\" className=\"card-button\">Comment</Button>\r\n                    <Button variant=\"success\" >Save</Button>\r\n                  </Card.Body>\r\n                </Card>\r\n              </>\r\n            );\r\n          })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dish;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}