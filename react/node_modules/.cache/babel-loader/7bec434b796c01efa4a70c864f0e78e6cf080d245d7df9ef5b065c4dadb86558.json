{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quynh\\\\Desktop\\\\React\\\\test\\\\src\\\\component\\\\Detail.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport Card from \"react-bootstrap/Card\";\nimport { useParams } from 'react-router-dom';\nimport MySpinner from '../layout/MySpinner';\nimport './Detail.css';\nimport { MyUserContext } from \"../App\";\nimport SideMenu from './SideMenu';\nimport Food from './Food';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Detail = () => {\n  _s();\n  const [user] = useContext(MyUserContext);\n  const {\n    productId\n  } = useParams();\n  const [product, setProduct] = useState(null);\n  const [comments, setComments] = useState(null);\n  const [content, setContent] = useState();\n  const [item, setItem] = useState([]);\n  const {\n    id\n  } = useParams();\n  const loadItem = async () => {\n    let res = await fetch(\"https:/www.themealdb.com/api/json/v1/1/lookup.php?i=\" + id);\n    let data = await res.json();\n    setItem(data.meals[0]);\n  };\n  useEffect(() => {\n    loadItem();\n  }, []);\n  if (item === null) return /*#__PURE__*/_jsxDEV(MySpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 14\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: \"bg-light text-white\",\n      id: \"intro-res\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        className: \"img\",\n        src: item.strMealThumb,\n        alt: \"Card image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.ImgOverlay, {\n        className: \"restaurant-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"text-overlay\",\n          children: item.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"text-overlay\",\n          children: item.strArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-content\",\n      children: [/*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Food, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Detail, \"8P436d8FmHP2ai3Om6/Eu0swZIM=\", false, function () {\n  return [useParams, useParams];\n});\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["useState","useEffect","useContext","Card","useParams","MySpinner","MyUserContext","SideMenu","Food","jsxDEV","_jsxDEV","Fragment","_Fragment","Detail","_s","user","productId","product","setProduct","comments","setComments","content","setContent","item","setItem","id","loadItem","res","fetch","data","json","meals","fileName","_jsxFileName","lineNumber","columnNumber","children","className","Img","src","strMealThumb","alt","ImgOverlay","Title","strMeal","Text","strArea","_c","$RefreshReg$"],"sources":["C:/Users/quynh/Desktop/React/test/src/component/Detail.js"],"sourcesContent":["import {useState, useEffect, useContext} from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { useParams } from 'react-router-dom';\r\nimport MySpinner from '../layout/MySpinner';\r\nimport './Detail.css';\r\nimport { MyUserContext } from \"../App\";\r\nimport SideMenu from './SideMenu';\r\nimport Food from './Food';\r\n\r\nconst Detail = () => {\r\n  const [user, ] = useContext(MyUserContext);\r\n    const {productId} = useParams();\r\n    const [product, setProduct] = useState(null);\r\n    const [comments, setComments] = useState(null);\r\n    const [content, setContent] = useState();\r\n\r\n    const [item, setItem] = useState([]);\r\n    const {id} = useParams();\r\n    const loadItem= async() =>{\r\n        let res = await fetch(\"https:/www.themealdb.com/api/json/v1/1/lookup.php?i=\" + id);\r\n        let data = await res.json();\r\n        \r\n        setItem(data.meals[0]);\r\n      }\r\n    useEffect(() => {\r\n        loadItem();\r\n      }, []);\r\n \r\n    if (item === null)\r\n      return <MySpinner />;\r\n  return (\r\n    <>\r\n      <Card className=\"bg-light text-white\" id=\"intro-res\">\r\n        <Card.Img className=\"img\" src={item.strMealThumb} alt=\"Card image\" />\r\n        <Card.ImgOverlay className=\"restaurant-overlay\">\r\n          <Card.Title className='text-overlay'>{item.strMeal}</Card.Title>\r\n          <Card.Text className='text-overlay'>{item.strArea}</Card.Text>\r\n        </Card.ImgOverlay>\r\n      </Card>\r\n      <div className='restaurant-content'>\r\n        <SideMenu />\r\n        <Food />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}