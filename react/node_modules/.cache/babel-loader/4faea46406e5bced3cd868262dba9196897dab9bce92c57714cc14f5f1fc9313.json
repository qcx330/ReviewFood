{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quynh\\\\Desktop\\\\React\\\\test\\\\src\\\\component\\\\Dish.js\";\nimport { Card, ListGroup, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dish = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !data ? \"Not found\" : data.map(item => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"dish-card\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: item.strMealThumb\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: item.strMeal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: item.strArea\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n              className: \"list-group-flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                className: \"comment\",\n                children: \"Comment 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                className: \"comment\",\n                children: \"Comment 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                className: \"comment\",\n                children: \"Comment 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                className: \"card-button\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                className: \"card-button-save\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 19\n            }, this)]\n          }, item.idMeal, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false);\n};\n_c = Dish;\nexport default Dish;\nvar _c;\n$RefreshReg$(_c, \"Dish\");","map":{"version":3,"names":["Card","ListGroup","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Dish","data","children","map","item","Col","className","Img","variant","src","strMealThumb","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","strMeal","Text","strArea","Item","idMeal","_c","$RefreshReg$"],"sources":["C:/Users/quynh/Desktop/React/test/src/component/Dish.js"],"sourcesContent":["import {Card, ListGroup, Button} from \"react-bootstrap\";\r\n\r\nconst Dish = ({ data }) => {\r\n  return (\r\n    <>\r\n      {!data\r\n        ? \"Not found\"\r\n        : data.map((item) => {\r\n            return (\r\n              <>\r\n              <Col>\r\n                <Card key = {item.idMeal} className=\"dish-card\">\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src={item.strMealThumb}\r\n                  />\r\n                  <Card.Body>\r\n                    <Card.Title>{item.strMeal}</Card.Title>\r\n                    <Card.Text>{item.strArea}</Card.Text>\r\n                  </Card.Body>\r\n                  <ListGroup className=\"list-group-flush\">\r\n                    <ListGroup.Item className=\"comment\">Comment 1</ListGroup.Item>\r\n                    <ListGroup.Item className=\"comment\">Comment 2</ListGroup.Item>\r\n                    <ListGroup.Item className=\"comment\">Comment 3</ListGroup.Item>\r\n                  </ListGroup>\r\n                  <Card.Body>\r\n                    <Button variant=\"success\" className=\"card-button\">Comment</Button>\r\n                    <Button variant=\"success\" className=\"card-button-save\" >Save</Button>\r\n                  </Card.Body>\r\n                </Card>\r\n                </Col>\r\n              </>\r\n            );\r\n          })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dish;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}